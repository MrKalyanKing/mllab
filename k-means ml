import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt


data = {
    'VAR1': [1.713, 0.180, 0.353, 0.940, 1.486, 1.266, 1.540, 0.459, 0.773],
    'VAR2': [1.586, 1.786, 1.240, 1.566, 0.759, 1.106, 0.419, 1.799, 0.186],
    'CLASS': [0, 1, 1, 0, 1, 0, 1, 1, 1]
}

df = pd.DataFrame(data)


X = df[['VAR1', 'VAR2']]


kmeans = KMeans(n_clusters=3, random_state=42, n_init=10)
kmeans.fit(X)


centroids = kmeans.cluster_centers_


new_point = np.array([[0.906, 0.606]])
predicted_cluster = kmeans.predict(new_point)[0]  


df['Cluster'] = kmeans.labels_ 
cluster_mode_mapping = df.groupby('Cluster')['CLASS'].agg(lambda x: x.mode()[0])  


predicted_class = cluster_mode_mapping.get(predicted_cluster, "Unknown")


print("Centroids:")
print(centroids)
print("Predicted Cluster Index:", predicted_cluster)
print(f"Predicted Class for new point (VAR1=0.906, VAR2=0.606): {predicted_class}")


plt.scatter(df['VAR1'], df['VAR2'], c=kmeans.labels_, cmap='viridis', label='Data Points')
plt.scatter(centroids[:, 0], centroids[:, 1], c='red', label='Centroids', marker='X', s=200)
plt.scatter(new_point[0][0], new_point[0][1], c='green', label='New Point', marker='o', s=100)
plt.title("K-Means Clustering")
plt.xlabel("VAR1")
plt.ylabel("VAR2")
plt.legend()
plt.show()
